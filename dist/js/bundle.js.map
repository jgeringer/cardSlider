{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/main.ts","src/js/myquery.ts"],"names":[],"mappings":"AAAA;;;ACAA,AAA2C;AAE3C,AAAuC;AAEvC,AAAwC;AAExC,AAAqD;AACrD,AAAoD;AACpD,AAAsC;AACtC,AAAI;AAEJ,AAA4C;AAG5C,AAAO,QAAC,AAAG,IAAC,AAAiB,AAAC,AAAC;AAG/B,IAAI,AAAI,OAAG,AAAC,EAAC,AAAO,AAAC;IACjB,AAAkB,qBAAG,AAAQ,SAAC,AAAa,cAAC,AAAqB,AAAC;IAClE,AAAU,aAAI,AAAQ,SAAC,AAAc,eAAC,AAAa,AAAC,AAAC;AAEzD,IAAI,AAAI,OAAG,CACT,EAAE,AAAI,MAAE,AAAU,YAAE,AAAG,KAAE,AAAC,AAAE,KAC5B,EAAE,AAAI,MAAE,AAAO,SAAE,AAAG,KAAE,AAAC,AAAE,KACzB,EAAE,AAAI,MAAE,AAAO,SAAE,AAAG,KAAE,AAAC,AAAE,AAC1B,AAAC;AAEF,IAAI,AAAI,AAAG,+BAEA,AAAG;AAAC,AAAG,AAAI,sCAEZ,AAAG,IAAC,AAAI,gBAAO,AAAG,IAAC,AAAG,MAAG,AAAC,AAE/B,AAAC;CAJA,AAAI,EAIH,AAAI,KAAC,AAAE,AAAC,AAEd,AAAC;AAEF,AAAI,KAAC,AAAE,GAAC,AAAO,SAAE;AACb,AAAO,YAAC,AAAG,IAAC,AAAgB,AAAC,AAAC;AAC9B,QAAI,AAAG,MAAG,AAAC,EAAC,AAAI,AAAC,AAAC;AAElB,AAAC,MAAC,AAAkB,AAAC,oBAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAC/C,AAAG,QAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAE7B,AAAoD;AACpD,AAAE,QAAC,AAAG,IAAC,AAAE,GAAC,AAAY,AAAC,AAAC,eAAA,AAAC;AACrB,YAAI,AAAI,OAAG,AAAI,AAAC;AAChB,AAAU,mBAAC,AAAkB,mBAAC,AAAW,aAAE,AAAI,AAAC,AAAC,AACrD;AAAC,AAAC,AAAI,WAAC,AAAC;AACJ,AAAU,mBAAC;AACP,AAA8B;AAC9B,AAAU,uBAAC,AAAS,YAAG,AAAE,AAAC,AAC9B;AAAC,WAAE,AAAG,AAAC,AAAC,AACZ;AAAC,AAEL;AAAC,AAAC,AAAC;;;;;ACvDH,AAA2C;AAC3C,AAAmC;AACnC,AAAI;AAGJ,AAAO,QAAC,AAAG,IAAC,AAAiB,AAAC,AAAC;AAG/B,AAAsB;AACtB,AAA4C;AAC5C,AAAe;AACf,AAAiD;AACjD,AAA4D;AAC5D,AAAoC;AACpC,AAAgD;AAChD,AAAY;AACZ,AAAiB;AACjB,AAAyC;AACzC,AAAY;AACZ,AAA4C;AAC5C,AAAQ","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"vendor/jquery.d.ts\" />\n\n//import { sayHello } from \"./myquery\";\n\n// console.log(sayHello(\"TypeScript!\"));\n\n// function showHello(divName: string, name: string){\n//     const elt = document.getElementById(divName);\n//     elt.innerText = sayHello(name);\n// }\n\n//showHello(\"greeting\", \"TypeScript LAND!\");\n\n\nconsole.log(\"hello from main\");\n\n\nlet card = $('.Card'),\n    cardListingWrapper = document.querySelector('.CardListingWrapper'),\n    cardDetail =  document.getElementById('Card-detail');\n\nlet dogs = [\n  { name: 'Snickers', age: 2 },\n  { name: 'Hardy', age: 6 },\n  { name: 'Chloe', age: 8 }\n];\n\nlet html = `\n  <ol>\n    ${dogs.map(dog => `\n      <li>\n        ${dog.name} is ${dog.age * 7} dog years old.\n      </li>\n    `).join('')}\n  </ol>\n`;\n\ncard.on('click', function(){\n    console.log('clicked card!!');\n    let $el = $(this);\n\n    $(cardListingWrapper).toggleClass('is-active');\n    $el.toggleClass('is-active');\n\n    //if is-active, then inject it's html to the page...\n    if($el.is('.is-active')){\n        let data = html;\n        cardDetail.insertAdjacentHTML('beforeend', data);\n    } else {\n        setTimeout(function(){\n            //console.log('html cleared');\n            cardDetail.innerHTML = '';\n        }, 500);\n    }\n    \n});","// export function sayHello(name: string) {\n//     return `Hello from ${name}`;\n// }\n\n\nconsole.log('inside my query');\n\n\n// if (el.classList) {\n//         el.classList.toggle('is-active');\n//     } else {\n//         var classes = el.className.split(' ');\n//         var existingIndex = classes.indexOf('is-active');\n//         if (existingIndex >= 0) {\n//             classes.splice(existingIndex, 1);\n//         }\n//         else {\n//             classes.push('is-active');\n//         }\n//         el.className = classes.join(' ');\n//     }"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvbWFpbi50cyIsInNyYy9qcy9teXF1ZXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxBQUEyQztBQUUzQyxBQUF1QztBQUV2QyxBQUF3QztBQUV4QyxBQUFxRDtBQUNyRCxBQUFvRDtBQUNwRCxBQUFzQztBQUN0QyxBQUFJO0FBRUosQUFBNEM7QUFHNUMsQUFBTyxRQUFDLEFBQUcsSUFBQyxBQUFpQixBQUFDLEFBQUM7QUFHL0IsSUFBSSxBQUFJLE9BQUcsQUFBQyxFQUFDLEFBQU8sQUFBQztJQUNqQixBQUFrQixxQkFBRyxBQUFRLFNBQUMsQUFBYSxjQUFDLEFBQXFCLEFBQUM7SUFDbEUsQUFBVSxhQUFJLEFBQVEsU0FBQyxBQUFjLGVBQUMsQUFBYSxBQUFDLEFBQUM7QUFFekQsSUFBSSxBQUFJLE9BQUcsQ0FDVCxFQUFFLEFBQUksTUFBRSxBQUFVLFlBQUUsQUFBRyxLQUFFLEFBQUMsQUFBRSxLQUM1QixFQUFFLEFBQUksTUFBRSxBQUFPLFNBQUUsQUFBRyxLQUFFLEFBQUMsQUFBRSxLQUN6QixFQUFFLEFBQUksTUFBRSxBQUFPLFNBQUUsQUFBRyxLQUFFLEFBQUMsQUFBRSxBQUMxQixBQUFDO0FBRUYsSUFBSSxBQUFJLEFBQUcsK0JBRUEsQUFBRztBQUFDLEFBQUcsQUFBSSxzQ0FFWixBQUFHLElBQUMsQUFBSSxnQkFBTyxBQUFHLElBQUMsQUFBRyxNQUFHLEFBQUMsQUFFL0IsQUFBQztDQUpBLEFBQUksRUFJSCxBQUFJLEtBQUMsQUFBRSxBQUFDLEFBRWQsQUFBQztBQUVGLEFBQUksS0FBQyxBQUFFLEdBQUMsQUFBTyxTQUFFO0FBQ2IsQUFBTyxZQUFDLEFBQUcsSUFBQyxBQUFnQixBQUFDLEFBQUM7QUFDOUIsUUFBSSxBQUFHLE1BQUcsQUFBQyxFQUFDLEFBQUksQUFBQyxBQUFDO0FBRWxCLEFBQUMsTUFBQyxBQUFrQixBQUFDLG9CQUFDLEFBQVcsWUFBQyxBQUFXLEFBQUMsQUFBQztBQUMvQyxBQUFHLFFBQUMsQUFBVyxZQUFDLEFBQVcsQUFBQyxBQUFDO0FBRTdCLEFBQW9EO0FBQ3BELEFBQUUsUUFBQyxBQUFHLElBQUMsQUFBRSxHQUFDLEFBQVksQUFBQyxBQUFDLGVBQUEsQUFBQztBQUNyQixZQUFJLEFBQUksT0FBRyxBQUFJLEFBQUM7QUFDaEIsQUFBVSxtQkFBQyxBQUFrQixtQkFBQyxBQUFXLGFBQUUsQUFBSSxBQUFDLEFBQUMsQUFDckQ7QUFBQyxBQUFDLEFBQUksV0FBQyxBQUFDO0FBQ0osQUFBVSxtQkFBQztBQUNQLEFBQThCO0FBQzlCLEFBQVUsdUJBQUMsQUFBUyxZQUFHLEFBQUUsQUFBQyxBQUM5QjtBQUFDLFdBQUUsQUFBRyxBQUFDLEFBQUMsQUFDWjtBQUFDLEFBRUw7QUFBQyxBQUFDLEFBQUM7Ozs7O0FDdkRILEFBQTJDO0FBQzNDLEFBQW1DO0FBQ25DLEFBQUk7QUFHSixBQUFPLFFBQUMsQUFBRyxJQUFDLEFBQWlCLEFBQUMsQUFBQztBQUcvQixBQUFzQjtBQUN0QixBQUE0QztBQUM1QyxBQUFlO0FBQ2YsQUFBaUQ7QUFDakQsQUFBNEQ7QUFDNUQsQUFBb0M7QUFDcEMsQUFBZ0Q7QUFDaEQsQUFBWTtBQUNaLEFBQWlCO0FBQ2pCLEFBQXlDO0FBQ3pDLEFBQVk7QUFDWixBQUE0QztBQUM1QyxBQUFRIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJ2ZW5kb3IvanF1ZXJ5LmQudHNcIiAvPlxuXG4vL2ltcG9ydCB7IHNheUhlbGxvIH0gZnJvbSBcIi4vbXlxdWVyeVwiO1xuXG4vLyBjb25zb2xlLmxvZyhzYXlIZWxsbyhcIlR5cGVTY3JpcHQhXCIpKTtcblxuLy8gZnVuY3Rpb24gc2hvd0hlbGxvKGRpdk5hbWU6IHN0cmluZywgbmFtZTogc3RyaW5nKXtcbi8vICAgICBjb25zdCBlbHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXZOYW1lKTtcbi8vICAgICBlbHQuaW5uZXJUZXh0ID0gc2F5SGVsbG8obmFtZSk7XG4vLyB9XG5cbi8vc2hvd0hlbGxvKFwiZ3JlZXRpbmdcIiwgXCJUeXBlU2NyaXB0IExBTkQhXCIpO1xuXG5cbmNvbnNvbGUubG9nKFwiaGVsbG8gZnJvbSBtYWluXCIpO1xuXG5cbmxldCBjYXJkID0gJCgnLkNhcmQnKSxcbiAgICBjYXJkTGlzdGluZ1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuQ2FyZExpc3RpbmdXcmFwcGVyJyksXG4gICAgY2FyZERldGFpbCA9ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnQ2FyZC1kZXRhaWwnKTtcblxubGV0IGRvZ3MgPSBbXG4gIHsgbmFtZTogJ1NuaWNrZXJzJywgYWdlOiAyIH0sXG4gIHsgbmFtZTogJ0hhcmR5JywgYWdlOiA2IH0sXG4gIHsgbmFtZTogJ0NobG9lJywgYWdlOiA4IH1cbl07XG5cbmxldCBodG1sID0gYFxuICA8b2w+XG4gICAgJHtkb2dzLm1hcChkb2cgPT4gYFxuICAgICAgPGxpPlxuICAgICAgICAke2RvZy5uYW1lfSBpcyAke2RvZy5hZ2UgKiA3fSBkb2cgeWVhcnMgb2xkLlxuICAgICAgPC9saT5cbiAgICBgKS5qb2luKCcnKX1cbiAgPC9vbD5cbmA7XG5cbmNhcmQub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICBjb25zb2xlLmxvZygnY2xpY2tlZCBjYXJkISEnKTtcbiAgICBsZXQgJGVsID0gJCh0aGlzKTtcblxuICAgICQoY2FyZExpc3RpbmdXcmFwcGVyKS50b2dnbGVDbGFzcygnaXMtYWN0aXZlJyk7XG4gICAgJGVsLnRvZ2dsZUNsYXNzKCdpcy1hY3RpdmUnKTtcblxuICAgIC8vaWYgaXMtYWN0aXZlLCB0aGVuIGluamVjdCBpdCdzIGh0bWwgdG8gdGhlIHBhZ2UuLi5cbiAgICBpZigkZWwuaXMoJy5pcy1hY3RpdmUnKSl7XG4gICAgICAgIGxldCBkYXRhID0gaHRtbDtcbiAgICAgICAgY2FyZERldGFpbC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2h0bWwgY2xlYXJlZCcpO1xuICAgICAgICAgICAgY2FyZERldGFpbC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgfSwgNTAwKTtcbiAgICB9XG4gICAgXG59KTsiLCIvLyBleHBvcnQgZnVuY3Rpb24gc2F5SGVsbG8obmFtZTogc3RyaW5nKSB7XG4vLyAgICAgcmV0dXJuIGBIZWxsbyBmcm9tICR7bmFtZX1gO1xuLy8gfVxuXG5cbmNvbnNvbGUubG9nKCdpbnNpZGUgbXkgcXVlcnknKTtcblxuXG4vLyBpZiAoZWwuY2xhc3NMaXN0KSB7XG4vLyAgICAgICAgIGVsLmNsYXNzTGlzdC50b2dnbGUoJ2lzLWFjdGl2ZScpO1xuLy8gICAgIH0gZWxzZSB7XG4vLyAgICAgICAgIHZhciBjbGFzc2VzID0gZWwuY2xhc3NOYW1lLnNwbGl0KCcgJyk7XG4vLyAgICAgICAgIHZhciBleGlzdGluZ0luZGV4ID0gY2xhc3Nlcy5pbmRleE9mKCdpcy1hY3RpdmUnKTtcbi8vICAgICAgICAgaWYgKGV4aXN0aW5nSW5kZXggPj0gMCkge1xuLy8gICAgICAgICAgICAgY2xhc3Nlcy5zcGxpY2UoZXhpc3RpbmdJbmRleCwgMSk7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgZWxzZSB7XG4vLyAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ2lzLWFjdGl2ZScpO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIGVsLmNsYXNzTmFtZSA9IGNsYXNzZXMuam9pbignICcpO1xuLy8gICAgIH0iXX0="}